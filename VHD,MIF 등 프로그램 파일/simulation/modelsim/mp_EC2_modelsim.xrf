vendor_name = ModelSim
source_file = 1, C:/altera/13.1/quartus/bin64/work/mp2_tb.vhd
source_file = 1, C:/altera/13.1/quartus/bin64/work/db/mp_EC2.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/altera/13.1/quartus/bin64/work/mp_ec2.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/lpm_ram_dq.tdf
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/altram.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/aglobal131.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/cbx.lst
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/altram.tdf
source_file = 1, c:/altera/13.1/quartus/libraries/others/maxplus2/memmodes.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/altsyncram.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/altrom.inc
source_file = 1, c:/altera/13.1/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, C:/altera/13.1/quartus/bin64/work/db/altsyncram_18a1.tdf
source_file = 1, C:/altera/13.1/quartus/bin64/work/program_EC2.mif
design_name = mp_EC2
instance = comp, \output[0]~output\, output[0]~output, mp_EC2, 1
instance = comp, \output[1]~output\, output[1]~output, mp_EC2, 1
instance = comp, \output[2]~output\, output[2]~output, mp_EC2, 1
instance = comp, \output[3]~output\, output[3]~output, mp_EC2, 1
instance = comp, \output[4]~output\, output[4]~output, mp_EC2, 1
instance = comp, \output[5]~output\, output[5]~output, mp_EC2, 1
instance = comp, \output[6]~output\, output[6]~output, mp_EC2, 1
instance = comp, \output[7]~output\, output[7]~output, mp_EC2, 1
instance = comp, \clock~input\, clock~input, mp_EC2, 1
instance = comp, \clock~inputclkctrl\, clock~inputclkctrl, mp_EC2, 1
instance = comp, \Add0~0\, Add0~0, mp_EC2, 1
instance = comp, \Add0~2\, Add0~2, mp_EC2, 1
instance = comp, \reset~input\, reset~input, mp_EC2, 1
instance = comp, \reset~inputclkctrl\, reset~inputclkctrl, mp_EC2, 1
instance = comp, \state.s_decode2~feeder\, state.s_decode2~feeder, mp_EC2, 1
instance = comp, \state.s_decode2\, state.s_decode2, mp_EC2, 1
instance = comp, \state.s_decode3~feeder\, state.s_decode3~feeder, mp_EC2, 1
instance = comp, \state.s_decode3\, state.s_decode3, mp_EC2, 1
instance = comp, \state~25\, state~25, mp_EC2, 1
instance = comp, \state.s_jpm\, state.s_jpm, mp_EC2, 1
instance = comp, \Add0~3\, Add0~3, mp_EC2, 1
instance = comp, \PC[0]\, PC[0], mp_EC2, 1
instance = comp, \Add0~4\, Add0~4, mp_EC2, 1
instance = comp, \Selector9~0\, Selector9~0, mp_EC2, 1
instance = comp, \PC[1]\, PC[1], mp_EC2, 1
instance = comp, \Add0~6\, Add0~6, mp_EC2, 1
instance = comp, \Add0~8\, Add0~8, mp_EC2, 1
instance = comp, \PC[2]\, PC[2], mp_EC2, 1
instance = comp, \Add0~9\, Add0~9, mp_EC2, 1
instance = comp, \Add0~11\, Add0~11, mp_EC2, 1
instance = comp, \PC[3]\, PC[3], mp_EC2, 1
instance = comp, \Add0~12\, Add0~12, mp_EC2, 1
instance = comp, \Add0~14\, Add0~14, mp_EC2, 1
instance = comp, \PC[4]\, PC[4], mp_EC2, 1
instance = comp, \Add1~3\, Add1~3, mp_EC2, 1
instance = comp, \Add1~6\, Add1~6, mp_EC2, 1
instance = comp, \Add1~4\, Add1~4, mp_EC2, 1
instance = comp, \Add1~7\, Add1~7, mp_EC2, 1
instance = comp, \A[2]~2\, A[2]~2, mp_EC2, 1
instance = comp, \input[2]~input\, input[2]~input, mp_EC2, 1
instance = comp, \state~22\, state~22, mp_EC2, 1
instance = comp, \state.s_input\, state.s_input, mp_EC2, 1
instance = comp, \A[2]\, A[2], mp_EC2, 1
instance = comp, \Add1~9\, Add1~9, mp_EC2, 1
instance = comp, \Add1~10\, Add1~10, mp_EC2, 1
instance = comp, \A[3]~3\, A[3]~3, mp_EC2, 1
instance = comp, \input[3]~input\, input[3]~input, mp_EC2, 1
instance = comp, \A[3]\, A[3], mp_EC2, 1
instance = comp, \Add1~12\, Add1~12, mp_EC2, 1
instance = comp, \Add1~13\, Add1~13, mp_EC2, 1
instance = comp, \A[4]~4\, A[4]~4, mp_EC2, 1
instance = comp, \input[4]~input\, input[4]~input, mp_EC2, 1
instance = comp, \A[4]\, A[4], mp_EC2, 1
instance = comp, \Add1~15\, Add1~15, mp_EC2, 1
instance = comp, \Add1~16\, Add1~16, mp_EC2, 1
instance = comp, \A[5]~5\, A[5]~5, mp_EC2, 1
instance = comp, \input[5]~input\, input[5]~input, mp_EC2, 1
instance = comp, \A[5]\, A[5], mp_EC2, 1
instance = comp, \Add1~18\, Add1~18, mp_EC2, 1
instance = comp, \Add1~19\, Add1~19, mp_EC2, 1
instance = comp, \A[6]~6\, A[6]~6, mp_EC2, 1
instance = comp, \input[6]~input\, input[6]~input, mp_EC2, 1
instance = comp, \A[6]\, A[6], mp_EC2, 1
instance = comp, \Add1~21\, Add1~21, mp_EC2, 1
instance = comp, \Add1~22\, Add1~22, mp_EC2, 1
instance = comp, \A[7]~7\, A[7]~7, mp_EC2, 1
instance = comp, \input[7]~input\, input[7]~input, mp_EC2, 1
instance = comp, \A[7]\, A[7], mp_EC2, 1
instance = comp, \memory|sram|ram_block|auto_generated|ram_block1a0\, memory|sram|ram_block|auto_generated|ram_block1a0, mp_EC2, 1
instance = comp, \Add1~0\, Add1~0, mp_EC2, 1
instance = comp, \Add1~1\, Add1~1, mp_EC2, 1
instance = comp, \A[1]~1\, A[1]~1, mp_EC2, 1
instance = comp, \input[1]~input\, input[1]~input, mp_EC2, 1
instance = comp, \A[1]\, A[1], mp_EC2, 1
instance = comp, \Selector0~0\, Selector0~0, mp_EC2, 1
instance = comp, \memory_address[0]~0\, memory_address[0]~0, mp_EC2, 1
instance = comp, \memory_address[4]\, memory_address[4], mp_EC2, 1
instance = comp, \Selector1~0\, Selector1~0, mp_EC2, 1
instance = comp, \memory_address[3]\, memory_address[3], mp_EC2, 1
instance = comp, \Selector2~0\, Selector2~0, mp_EC2, 1
instance = comp, \memory_address[2]\, memory_address[2], mp_EC2, 1
instance = comp, \Selector3~0\, Selector3~0, mp_EC2, 1
instance = comp, \memory_address[1]\, memory_address[1], mp_EC2, 1
instance = comp, \state~20\, state~20, mp_EC2, 1
instance = comp, \state.s_add\, state.s_add, mp_EC2, 1
instance = comp, \state~23\, state~23, mp_EC2, 1
instance = comp, \state.s_dec\, state.s_dec, mp_EC2, 1
instance = comp, \WideOr4~0\, WideOr4~0, mp_EC2, 1
instance = comp, \state~19\, state~19, mp_EC2, 1
instance = comp, \state.s_output\, state.s_output, mp_EC2, 1
instance = comp, \Selector5~1\, Selector5~1, mp_EC2, 1
instance = comp, \Selector5~0\, Selector5~0, mp_EC2, 1
instance = comp, \Selector5~2\, Selector5~2, mp_EC2, 1
instance = comp, \state.s_start\, state.s_start, mp_EC2, 1
instance = comp, \state.s_start2~0\, state.s_start2~0, mp_EC2, 1
instance = comp, \state.s_start2\, state.s_start2, mp_EC2, 1
instance = comp, \state.s_start3~feeder\, state.s_start3~feeder, mp_EC2, 1
instance = comp, \state.s_start3\, state.s_start3, mp_EC2, 1
instance = comp, \state.s_fetch~feeder\, state.s_fetch~feeder, mp_EC2, 1
instance = comp, \state.s_fetch\, state.s_fetch, mp_EC2, 1
instance = comp, \state.s_decode~feeder\, state.s_decode~feeder, mp_EC2, 1
instance = comp, \state.s_decode\, state.s_decode, mp_EC2, 1
instance = comp, \Selector4~0\, Selector4~0, mp_EC2, 1
instance = comp, \memory_address[0]\, memory_address[0], mp_EC2, 1
instance = comp, \state~24\, state~24, mp_EC2, 1
instance = comp, \state.s_store\, state.s_store, mp_EC2, 1
instance = comp, \state.s_store2~feeder\, state.s_store2~feeder, mp_EC2, 1
instance = comp, \state.s_store2\, state.s_store2, mp_EC2, 1
instance = comp, \Selector19~0\, Selector19~0, mp_EC2, 1
instance = comp, \state~21\, state~21, mp_EC2, 1
instance = comp, \state.s_load\, state.s_load, mp_EC2, 1
instance = comp, \A[0]~0\, A[0]~0, mp_EC2, 1
instance = comp, \input[0]~input\, input[0]~input, mp_EC2, 1
instance = comp, \A[0]\, A[0], mp_EC2, 1
instance = comp, \output[0]~reg0feeder\, output[0]~reg0feeder, mp_EC2, 1
instance = comp, \output[0]~0\, output[0]~0, mp_EC2, 1
instance = comp, \output[0]~reg0\, output[0]~reg0, mp_EC2, 1
instance = comp, \output[1]~reg0feeder\, output[1]~reg0feeder, mp_EC2, 1
instance = comp, \output[1]~reg0\, output[1]~reg0, mp_EC2, 1
instance = comp, \output[2]~reg0feeder\, output[2]~reg0feeder, mp_EC2, 1
instance = comp, \output[2]~reg0\, output[2]~reg0, mp_EC2, 1
instance = comp, \output[3]~reg0feeder\, output[3]~reg0feeder, mp_EC2, 1
instance = comp, \output[3]~reg0\, output[3]~reg0, mp_EC2, 1
instance = comp, \output[4]~reg0feeder\, output[4]~reg0feeder, mp_EC2, 1
instance = comp, \output[4]~reg0\, output[4]~reg0, mp_EC2, 1
instance = comp, \output[5]~reg0feeder\, output[5]~reg0feeder, mp_EC2, 1
instance = comp, \output[5]~reg0\, output[5]~reg0, mp_EC2, 1
instance = comp, \output[6]~reg0feeder\, output[6]~reg0feeder, mp_EC2, 1
instance = comp, \output[6]~reg0\, output[6]~reg0, mp_EC2, 1
instance = comp, \output[7]~reg0feeder\, output[7]~reg0feeder, mp_EC2, 1
instance = comp, \output[7]~reg0\, output[7]~reg0, mp_EC2, 1
